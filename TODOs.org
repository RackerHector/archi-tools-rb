* ArchiMate Tools TODO

** SVG Rendering

*** DONE skip bendpoints inside source or target
    CLOSED: [2017-02-01 Wed 12:41]
*** DONE badges for device, node, service (cosmetic)
    CLOSED: [2017-02-01 Wed 12:41]
*** DONE trim space around diagram names (cosmetic)
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE badge position updates (cosmetic, legibility)
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE badge updates (cosmetic)
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE verify junctions
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE alternate figures (curved vs box & badge) selected by type="1" on Child (legibility)
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE text bounds in entities (cosmetic, legibility)
    CLOSED: [2017-02-01 Wed 12:42]
*** DONE badge spacer settings (cosmetic, legibility) - artifact needs work.
    CLOSED: [2017-02-01 Wed 12:42]
*** TODO text on lines (cosmetic, legibility)
*** TODO bendpoint curves (cosmetic)
*** TODO line crossing hops (cosmetic)
*** DONE refactor
    CLOSED: [2017-02-01 Wed 12:42]

** Performance

*** TODO Look into using Celluloid and/or jruby to improve performance
          Thinking about concurrency for performance improvements

          read base
          read local
          read remote

          base + local -> diff l
          base + remote -> diff b

          diff l + diff b -> conflict detection

          cd -> each conflict type

          conflicts -> conflict resolution

          cr (user response)

          serialize result (single)


** Diff/Merge

*** Conflicts can happen on the same diff 2x. How to handle this?
*** DONE In `Change.to_s` - deref args that point to other elements (like archimate_element)
    CLOSED: [2017-02-01 Wed 12:48]
*** In Diagram children diffs - make to_s reference the parent diagram
*** DONE Array diffs on non-id'd diffable elements should detect changes rather than delete/insert
    CLOSED: [2017-02-01 Wed 12:48]
*** Archi file could have ids that conflict (i.e. 2 relationships with same id - this is bad!!! Was it a bad merge or something worse)
*** Implement check for de-duplicated merges
*** DONE Add a summary diff - elements added/changed/deleted, diagrams
    CLOSED: [2017-02-01 Wed 12:48]

** Lint

*** DONE Basic Lint features (matching Archi)
    CLOSED: [2017-02-01 Wed 12:49]
*** TODO Scorecard lint

** File Formats & Exports

*** TODO Convert support for
**** TODO Rdf
**** TODO Gremlin
**** DONE Neo4j CSV
     CLOSED: [2017-02-01 Wed 13:04]
**** DONE Cypher
     CLOSED: [2017-02-01 Wed 13:04]
**** DONE N-Quad
     CLOSED: [2017-02-01 Wed 13:04]
**** DONE GraphML
     CLOSED: [2017-02-01 Wed 13:04]

** DSL

*** TODO CLI DSL
*** TODO DSL for relationships
    # type                        from               to
    "AssociationRelationship",    "associated_with", "associated_with"
    "AccessRelationship",         "accesses",        "accessed_by"
    "UsedByRelationship",         "used_by",         "uses"
    "RealisationRelationship",    "realizes",        "realized_by"
    "AssignmentRelationship",     ""
    "AggregationRelationship"
    "CompositionRelationship"
    "FlowRelationship"
    "TriggeringRelationship"
    "GroupingRelationship"
    "SpecialisationRelationship"
    "InfluenceRelationship"

    # attributes that are references to other nodes in the model

    For any of these inserted or changed...

    * Property.key (only after PropertyDefs is introduced)
      - Property referenced deleted key
    * Child.target_connections -> Array of SourceConnection ids
      - SourceConnection.id deleted
    * Child.archimate_element -> Element.id
      - Element.id deleted
    * Folder.items -> Array of IdentifiedNode
      - *.id deleted
    * Relationship.source -> Element.id
      - Element.id deleted
    * Relationship.target -> Element.id
      - Element.id deleted
    * SourceConnection.source -> Child.id
      - Child.id deleted
    * SourceConnection.target -> Child.id
      - Child.id deleted
    * SourceConnection.relationship -> Relationship.id
      - Relationship.id deleted


** Additional Features

*** TODO Add Split file feature (extract say a diagram or set of elements)
*** TODO Merge unrelated files (this is the intent of Merger)
*** TODO Add a super strict mode to note when reader finds unexpected content
*** DONE Stats (elements, relationships, diagrams)
    CLOSED: [2017-02-01 Wed 12:45]
*** TODO Tool to query for dependencies
*** TODO Tool to assign/validate/enforce metadata

** Code Quality/Refactoring

*** TODO Consider breaking this into a number of gems (for example: base lib, diff/merge, other cmdline tools)
*** TODO Consider making classes for each element and relationship type?
*** DONE Figure out how to make rmagick optional and/or remove rmagick dependency
    CLOSED: [2017-02-01 Wed 12:45]
*** TODO Data model items that reference something else by id should have the actual object available - not just the id
*** DONE Convert all CLIs to use AIO - merge with OutputIO and MaybeIO (maybe)
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE figure out a better parent mechanism - it's really not fully cooked
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE remove parent_id from dry::struct objects - then can use class schema instead of comparison attributes
    CLOSED: [2017-02-01 Wed 12:45]
*** TODO Not handling sketch diagram model in archi
*** DONE Use one color method - currently using HighLine and Colorize
    CLOSED: [2017-02-01 Wed 12:45]
*** TODO Refactor merge to pull conflict detection out
*** DONE Clean up the way that the describe is done on data model
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Permit model items to link back to their parent
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Should be a master hash index of id to object in Model
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Improve description of diffs for conflict display
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Eliminate use of Document in favor of Model
    CLOSED: [2017-02-01 Wed 12:45]
    - [X] cli/archi.rb
    - [X] cli/cleanup.rb
    - [X] cli/convert.rb
    - [X] cli/svger.rb
*** TODO Experiment with Ox, Oga, Sax-Machine for better performance on convert
*** TODO Map conversion between archi and archimate diagram formats
*** DONE Write a common clone for dry-struct classes
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Make a format agnostic file reader (which delegates to appropriate file type readers)
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE Decide between ox and nokogiri and eliminate the alternate
    CLOSED: [2017-02-01 Wed 12:45]
*** DONE See what can be done about performance
    CLOSED: [2017-02-01 Wed 12:46]
     - Reading file 11-12 secs
     - deleted relationships referenced in diagrams is slow
*** DONE Refactor to better OO design where necessary (see all about names below)
    CLOSED: [2017-02-01 Wed 12:46]
*** DONE Refactor merge to pull apply diffs out
    CLOSED: [2017-02-01 Wed 12:46]
*** TODO Refactor Bendpoint to use a point (rather than Archi start/end points).
*** TODO Refactor DataModel classes to use enumeration classes for appropriate values
*** TODO Add a test to produce SVG output for the "everything.archimate" file
*** TODO Add a test to produce a badges diagram


* Refactor of data model for diff/merge purposes

** Validation
*** Identifiable objects exist one place in model
*** 
** Join:
   - Organizable Id (An Organizable is an Identifiable that can be contained in a Folder
   - Folder
   - Position in Folder - index isn't good here ... should that position really be a linked list?
* Introduce the idea of archimate modules
  - Allow creation of a focused model by including archimate modules - which are self-contained packages of elements and relationships
  - Allow inheritance of a module to permit showing changes to an existing model.
** How to implement?
   - Break things down automatically?
   - By Layer?
   - How to Deal with relationships across module boundaries?
* Need to have model merge capability
